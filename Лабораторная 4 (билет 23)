НОМЕР 1 Python:
import numpy as np

def gaussian_elimination(A, b):
    """
    Solve a system of linear equations using Gaussian elimination.

    Args:
        A (numpy.ndarray): The coefficient matrix.
        b (numpy.ndarray): The right-hand side vector.

    Returns:
        numpy.ndarray: The solution vector.
    """

    n = A.shape[0]

    # Forward elimination
    for i in range(n):
        for j in range(i + 1, n):
            if A[j, i] != 0:
                factor = A[j, i] / A[i, i]
                A[j, :] -= factor * A[i, :]
                b[j] -= factor * b[i]

    # Back substitution
    x = np.zeros(n)
    for i in range(n - 1, -1, -1):
        x[i] = (b[i] - np.dot(A[i, i + 1:], x[i + 1:])) / A[i, i]

    return x

def main():
    # Get the coefficient matrix and the right-hand side vector from the user
    A = np.array([
        [2, -7, 8, -4],
        [-1, 4, -1, 1],
        [3, -4, 2, -1],
        [-9, 1, -4, 6],
    ])
    b = np.array([57, 24, 28, 12])

    # Solve the system of linear equations
    x = gaussian_elimination(A, b)

    # Print the solution vector
    print("The solution vector is:", x)

if name == "__main__":
    main()
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
НОМЕР 2 Python:
import numpy as np

# Define the system of equations
A = np.array([[2, 2, -1], [5, -2, 5], [2, 2, 5]])
b = np.array([-1, 2, 0])

# Solve the system of equations using numpy.linalg.solve()
x = np.linalg.solve(A, b)

# Print the solution
print("Solution:", x)
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
НОМЕР 3 C++:
#include <iostream>
#include <iomanip>

using namespace std;

// Функция для решения СЛАУ методом Зейделя
void zeidel(double **A, double *x, double *b, int n, double eps) {
    double temp;
    int i, j;

    for (int iter = 0; iter < 1000; iter++) {
        for (i = 0; i < n; i++) {
            temp = 0;
            for (j = 0; j < n; j++) {
                if (i != j) {
                    temp += A[i][j] * x[j];
                }
            }
            x[i] = (b[i] - temp) / A[i][i];
        }

        // Проверка на сходимость
        double max_err = 0;
        for (i = 0; i < n; i++) {
            temp = 0;
            for (j = 0; j < n; j++) {
                temp += A[i][j] * x[j];
            }
            max_err = max(max_err, abs(temp - b[i]));
        }

        if (max_err < eps) {
            break;
        }
    }
}

int main() {
    // Задать коэффициенты матрицы A и вектор b
    double A[4][4] = {
        {-24, 16, 4, 7},
        {-8, 21, 4, -2},
        {6, 6, 16, -84},
        {-7, 7, 5, 24}
    };

    double b[4] = {130, 39, -84, 65};

    // Решение СЛАУ методом Зейделя
    double x[4] = {0, 0, 0, 0};
    double eps = 0.01;
    zeidel(A, x, b, 4, eps);

    // Вывод решения
    cout << "Решение СЛАУ:" << endl;
    for (int i = 0; i < 4; i++) {
        cout << "x" << i + 1 << " = " << fixed << setprecision(4) << x[i] << endl;
    }

    return 0;
}
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
НОМЕР 4 C++:
#include <iostream>
#include <cmath>

using namespace std;

void solveSystem(double A[][5], double b[], double x[], int n) {
    // Прямой ход
    for (int i = 0; i < n - 1; i++) {
        for (int j = i + 1; j < n; j++) {
            double factor = A[j][i] / A[i][i];
            for (int k = 0; k < n + 1; k++) {
                A[j][k] -= factor * A[i][k];
            }
            b[j] -= factor * b[i];
        }
    }

    // Обратная подстановка
    for (int i = n - 1; i >= 0; i--) {
        x[i] = b[i] / A[i][i];
        for (int j = i - 1; j >= 0; j--) {
            b[j] -= A[j][i] * x[i];
        }
    }
}

int main() {
    double A[][5] = {
        {7, -15, 0, 0, 0},
        {-6, 19, -29, 0, 0},
        {6, 18, 0, 7, 0},
        {-7, 11, 0, 4, -2},
        {5, 7, 0, 0, 0}
    };

    double b[] = {38, 3, -45, 30, 48};
    double x[5];

    solveSystem(A, b, x, 5);

    cout << "Решение системы уравнений:" << endl;
    for (int i = 0; i < 5; i++) {
        cout << "x" << i + 1 << ": " << x[i] << endl;
    }

    return 0;
}
